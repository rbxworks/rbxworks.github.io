// Import the Vercel KV client at the top of your file
import { kv } from '@vercel/kv';

// This is your Vercel serverless function
export default async function handler(request, response) {
  // Get the data from the URL
  const { click_id, payout, txid, status } = request.query;

  // --- 1. VALIDATE & LOG THE DATA ---
  // Ensure we have a unique ID to save the data against.
  if (!txid) {
    console.log('--- ‚ùå CONVERSION FAILED: No Transaction ID (txid) provided. ---');
    // Tell the sender that the request was bad.
    return response.status(400).send('Transaction ID is required');
  }

  console.log('--- ‚úÖ NEW CONVERSION RECEIVED! ---');
  console.log('Saving data for Transaction ID:', txid);
  console.log('------------------------------------');

  // --- 2. SAVE THE DATA TO THE DATABASE ---
  // We'll create a new "record" in the database using the unique transaction ID as the key.
  // The value will be an object containing all the details.
  try {
    await kv.set(`conversion:${txid}`, { 
      click_id, 
      payout, 
      status,
      receivedAt: new Date().toISOString() // Also save the time it was received
    });
  } catch (error) {
    console.error('--- üö® DATABASE ERROR ---', error);
    // Tell the sender there was a server error.
    return response.status(500).send('Failed to save data');
  }

  // --- 3. SEND A SIMPLE "OK" RESPONSE ---
  // All the postback sender needs is a confirmation that you received the data.
  // A simple 200 OK is the industry standard.
  response.status(200).send('OK');
}
